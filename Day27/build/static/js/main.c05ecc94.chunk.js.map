{"version":3,"sources":["Components/AddTodo.jsx","actions/index.js","Components/Todo.jsx","Components/TodoList.jsx","App.js","reducers/todoReducer.js","reducers/index.js","store.js","index.js"],"names":["Add","dispatch","useDispatch","useState","todo","setTodo","className","type","value","onChange","e","target","placeholder","onClick","payload","AddTodo","Todo","index","faClipboardCheck","icon","setIcon","classes","setClasses","faTrashAlt","TodoList","todos","useSelector","state","map","App","todoReduce","action","filter","item","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAwBeA,EApBH,WACR,IAAMC,EAAWC,cACjB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,OACI,mCACI,sBAAKC,UAAU,aAAf,UACA,uBAAOC,KAAK,OAAOC,MAAOJ,EAAMK,SAAU,SAACC,GAAD,OAAOL,EAAQK,EAAEC,OAAOH,QAAQI,YAAY,eACtF,wBAAQC,QAAS,WACb,GAAY,KAATT,EAIC,MAAO,GAHXH,ECbA,SAACG,GACb,MAAO,CACHG,KAAM,WACNO,QAASV,GDUQW,CAAQX,IAAQC,EAAQ,KAFrC,4B,eEuBGW,EA5BF,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,MAAOb,EAAU,EAAVA,KAEZH,EAAWC,cACjB,EAAwBC,mBAASe,KAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BjB,mBAAS,uBAAvC,mBAAOkB,EAAP,KAAgBC,EAAhB,KAEA,OACI,mCACR,sBAAKhB,UAAWe,EAAhB,UACQ,sBAAMf,UAAU,YAAhB,SAA6BF,IAC7B,cAAC,IAAD,CACAS,QAAS,WACFM,IAASD,KACZE,EAAQG,KACRD,EAAW,mBAEHH,IAASI,MACbtB,EDfL,CACHM,KAAM,cACNO,QCa4BG,IACpBG,EAAQF,KACRI,EAAW,yBAGnBH,KAAMA,UCVCK,EAfE,WACb,IAAMC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SACzC,OACI,mCACA,qBAAKnB,UAAU,YAAf,SACCmB,EAAMG,KAAI,SAACxB,EAAMa,GACd,OACI,cAAC,EAAD,CAAMb,KAAMA,EAAkBa,MAAOA,GAAdA,WCKxBY,MAXf,WACE,OACE,mCACE,sBAAKvB,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,U,gBCAOwB,EATG,WAAyB,IAAxBH,EAAuB,uDAAf,GAAII,EAAW,uCAMtC,MALmB,aAAhBA,EAAOxB,KACNoB,EAAK,sBAAOA,GAAP,CAAaI,EAAOjB,UACD,gBAAhBiB,EAAOxB,OACfoB,EAAQA,EAAMK,QAAO,SAACC,EAAMhB,GAAP,OAAiBA,IAAUc,EAAOjB,YAEpDa,GCCIO,EAJKC,YAAgB,CAChCV,MAAOK,ICCIM,EAFDC,YAAYH,GCG1BI,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGFK,SAASC,eAAe,W","file":"static/js/main.c05ecc94.chunk.js","sourcesContent":["import {AddTodo} from \"../actions/index\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Add = () => {\r\n    const dispatch = useDispatch();\r\n    const [todo, setTodo] = useState(\"\");\r\n    return(\r\n        <>\r\n            <div className=\"input-area\">\r\n            <input type=\"text\" value={todo} onChange={(e) => setTodo(e.target.value)} placeholder=\"Add todo..\"/>\r\n            <button onClick={() => {\r\n                if(todo !== \"\"){\r\n                dispatch(AddTodo(todo)); setTodo(\"\")\r\n                }\r\n                else{\r\n                    return \"\";\r\n                }\r\n                }}>Add Todo</button>\r\n            </div>\r\n</>\r\n    )\r\n}\r\n\r\nexport default Add;","const AddTodo = (todo) => {\r\n    return({\r\n        type: \"ADD_TODO\",\r\n        payload: todo,\r\n    })\r\n}\r\n\r\nconst RemoveTodo = (id) => {\r\n    return({\r\n        type: \"REMOVE_TODO\",\r\n        payload: id,\r\n    })\r\n}\r\n\r\nexport {AddTodo, RemoveTodo};","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faClipboardCheck, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { useState } from 'react';\r\nimport { RemoveTodo } from '../actions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst Todo = ({index, todo}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [icon, setIcon] = useState(faClipboardCheck)\r\n    const [classes, setClasses] = useState(\"todo todo-remaining\");\r\n\r\n    return(\r\n        <>\r\n<div className={classes}>\r\n        <span className=\"todo-text\">{todo}</span>\r\n        <FontAwesomeIcon \r\n        onClick={()=>{\r\n            if(icon === faClipboardCheck){\r\n            setIcon(faTrashAlt)\r\n            setClasses(\"todo todo-done\")\r\n            }\r\n            else if(icon === faTrashAlt){\r\n                dispatch(RemoveTodo(index))\r\n                setIcon(faClipboardCheck)\r\n                setClasses(\"todo todo-remaining\")\r\n            }\r\n            }}\r\n        icon={icon} />\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo;","import { useSelector} from 'react-redux';\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = () => {\r\n    const todos = useSelector(state => state.todos)\r\n    return(\r\n        <>\r\n        <div className=\"todo-list\">\r\n        {todos.map((todo, index) => {\r\n            return(  \r\n                <Todo todo={todo} key={index} index={index} />\r\n            )\r\n        })}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import './App.css';\nimport Add from './Components/AddTodo';\nimport TodoList from './Components/TodoList';\n\nfunction App() {\n  return (\n    <>\n      <div className=\"container\">\n        <Add/>\n        <TodoList/>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const todoReduce= (state = [], action) => {\r\n    if(action.type === \"ADD_TODO\"){\r\n        state = [...state,action.payload]\r\n    } else if ( action.type === \"REMOVE_TODO\" ){\r\n        state = state.filter((item, index) => index !== action.payload)\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default todoReduce;","import todoReduce from \"./todoReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n    todos: todoReduce,\r\n})\r\n\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './store';\nimport {Provider} from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}