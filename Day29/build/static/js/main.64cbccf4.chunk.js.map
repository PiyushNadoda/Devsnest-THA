{"version":3,"sources":["components/card.js","components/input.js","actions/index.js","components/themeToggle.js","App.js","reducers/inputReducer.js","reducers/getPlaceDataReducer.js","reducers/themeReducer.js","reducers/reducer.js","store.js","index.js"],"names":["Card","theme","useSelector","state","placeData","data","className","location","src","current","condition","icon","alt","temp_c","text","name","wind_kph","humidity","precip_in","Input","place","dispatch","useDispatch","type","value","onChange","e","payload","inputPlace","target","onClick","fetch","then","res","json","getPlaceData","ToggleTheme","toggleTheme","App","inputPlaceReducer","action","console","log","placeDataReducer","themeReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64cbccf4.chunk.js","sourcesContent":["import { useSelector} from \"react-redux\";\n\nconst Card = () => {\n  const theme = useSelector(state => state.theme);\n  const placeData = useSelector(state => state.data)\n    return(<>\n     <div className=\"offset-md-4 col-12 col-md-4 weather\">\n        <div className={theme ? \"card dark\" : \"card\"}>\n          { placeData.location ? (<>\n          <img src={placeData.current.condition.icon} alt=\"\"/>\n          <div className=\"card-temp\">{placeData.current.temp_c}&deg;</div>\n          <div className=\"card-condition\">{placeData.current.condition.text}</div>\n          <div className=\"card-place\">{placeData.location.name}</div>\n          <div className=\"container card-bottom\">\n            <div className=\"row\">\n              <div className=\"col\">wind speed\n                <div className=\"card-data\">{placeData.current.wind_kph} <span className=\"card-unit\">km</span> </div>\n              </div>\n              <div className=\"col\">Humidity\n              <div className=\"card-data\">{placeData.current.humidity}<span className=\"card-unit\">%</span> </div>\n              </div>\n              <div className=\"col\">Precipitation\n              <div className=\"card-data\">{placeData.current.precip_in}<span className=\"card-unit\">%</span> </div>\n              </div>\n            </div>\n          </div>\n          </>) : (\n            <div className=\"place-not-found\">Place not found</div>\n          )}\n        </div>\n      </div>\n    </>)\n}\n\nexport default Card;","import { useDispatch, useSelector } from 'react-redux';\nimport { inputPlace, getPlaceData } from '../actions/index';\n\nconst Input = () => {\n    const place = useSelector(state => state.place)\n  const theme = useSelector(state => state.theme);\n  const dispatch = useDispatch()\n    return (\n    <>\n      <div className=\"col-12 form\">\n        <input\n          type=\"text\"\n          value={place}\n          onChange={(e) => {\n            dispatch(inputPlace(e.target.value))\n          }}\n        />\n        <button className={theme ? \"btn btn-light\" : \"btn btn-dark\"}\n            onClick={() => {\n              dispatch(getPlaceData(place))\n            }}\n        >\n          submit\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default Input;\n","const inputPlace = (place) => {\n    return{\n        type: \"INPUT_PLACE\",\n        payload: place,\n    }\n}\n\nconst getPlaceData = (place) => {\n    return (dispatch) => {\n    fetch(`https://api.weatherapi.com/v1/current.json?key=0992870c262c4f55a51161444212008&q=${place}`)\n    .then(res => res.json())\n    .then((data) => {\n      dispatch({\n          type : \"UPDATE_PLACE_DATA\",\n          payload: data\n      })\n    })\n}}\nconst toggleTheme = (theme) => {\n    return{\n        type : \"TOGGLE_THEME\",\n        payload: theme,\n    }\n}\n\nexport {inputPlace, getPlaceData, toggleTheme};","import {useSelector, useDispatch} from 'react-redux';\nimport {toggleTheme} from '../actions/index'\n\nconst ToggleTheme = () => {\n    const theme = useSelector(state => state.theme);\n    const dispatch = useDispatch();\n    return(\n        <button className={theme ?\"btn btn-light theme\" : \"btn btn-dark theme\" } onClick={() => dispatch(toggleTheme(theme))}> theme </button>\n    )\n}\n\nexport default ToggleTheme;","import './App.css';\nimport Card from './components/card';\nimport Input from './components/input'\nimport ToggleTheme from './components/themeToggle';\nimport {useSelector} from 'react-redux';\n\nfunction App() {\n  const theme = useSelector(state => state.theme);\n  return (\n    <div className={theme ? \"App dark\" : \"App\"}>\n      <ToggleTheme/>\n      <Input />\n      <Card />\n    </div>\n  );\n}\n\nexport default App;\n","const inputPlaceReducer = (state = \"\", action) => {\n    if(action.type === \"INPUT_PLACE\"){\n        console.log(action.payload);\n        return action.payload\n    }\n    return state;\n}\n\nexport default inputPlaceReducer;","const placeDataReducer = (state = \"\", action) => {\n    if(action.type === \"UPDATE_PLACE_DATA\"){\n        return action.payload\n    }\n    return state;\n}\n\nexport default placeDataReducer;","const themeReducer = (state = false, action) => {\n    if(action.type === \"TOGGLE_THEME\"){\n        state = !action.payload\n    }\n    return state;\n}\n\nexport default themeReducer;","import inputPlaceReducer from './inputReducer';\nimport { combineReducers } from 'redux';\nimport placeDataReducer from './getPlaceDataReducer';\nimport themeReducer from './themeReducer';\n\nconst rootReducer = combineReducers({\n    place : inputPlaceReducer,\n    data: placeDataReducer,\n    theme: themeReducer\n})\n\nexport default rootReducer;","import rootReducer from \"./reducers/reducer\";\nimport thunk from 'redux-thunk'\nimport { createStore , applyMiddleware} from \"redux\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './store';\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}